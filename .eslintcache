[{"/home/elton/Área de Trabalho/Project/site-react/src/index.js":"1","/home/elton/Área de Trabalho/Project/site-react/src/App.js":"2","/home/elton/Área de Trabalho/Project/site-react/src/reportWebVitals.js":"3","/home/elton/Área de Trabalho/Project/site-react/src/pages/home/home.js":"4","/home/elton/Área de Trabalho/Project/site-react/src/components/header/header.js":"5","/home/elton/Área de Trabalho/Project/site-react/src/components/textCard/textCard.js":"6","/home/elton/Área de Trabalho/Project/site-react/src/components/projects-menu/projects-menu.js":"7","/home/elton/Área de Trabalho/Project/site-react/src/pages/workProgress/workProgress.js":"8"},{"size":593,"mtime":1608655657951,"results":"9","hashOfConfig":"10"},{"size":579,"mtime":1610650403007,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608553930056,"results":"12","hashOfConfig":"10"},{"size":651,"mtime":1609984158469,"results":"13","hashOfConfig":"10"},{"size":1063,"mtime":1610650323624,"results":"14","hashOfConfig":"10"},{"size":1597,"mtime":1609960616501,"results":"15","hashOfConfig":"10"},{"size":1313,"mtime":1610629759514,"results":"16","hashOfConfig":"10"},{"size":282,"mtime":1610649951342,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"18oi4qc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/elton/Área de Trabalho/Project/site-react/src/index.js",[],["37","38"],"/home/elton/Área de Trabalho/Project/site-react/src/App.js",[],"/home/elton/Área de Trabalho/Project/site-react/src/reportWebVitals.js",[],"/home/elton/Área de Trabalho/Project/site-react/src/pages/home/home.js",[],"/home/elton/Área de Trabalho/Project/site-react/src/components/header/header.js",[],"/home/elton/Área de Trabalho/Project/site-react/src/components/textCard/textCard.js",[],["39","40"],"/home/elton/Área de Trabalho/Project/site-react/src/components/projects-menu/projects-menu.js",["41","42","43","44"],"import { useState } from 'react';\nimport './projects-menu.css';\n\n\nfunction ProjectsMenu() {\n\n    const [display, setDisplay] = useState(\"block\");\n    const [clicked, setClicked] = useState(\"clicked\")\n\n    function toggle(){\n      if(display == \"block\"){\n          setDisplay(\"none\")\n          setClicked(\" \")\n        }else{\n            setClicked(\"clicked\");\n            setTimeout(()=>{\n                setDisplay(\"block\")\n            },500)\n      }\n    }\n\n/*this function is only for homepage*/\n    function started(){\n        setTimeout(()=>{\n            toggle()\n        },1500)\n    }\n    window.onload =  started;\n/***********************************/\n\n    return (\n        <div className={\"proj-cont \" + clicked}  onClick={()=>{toggle()}} >\n             <div style={{display:display}} >\n        <h1>Projects</h1>\n        <nav>\n            <ul>\n                <li><a target=\"_blank\" href=\"https://siteform.netlify.app/\">Form</a></li>\n                <li><a href=\"#\">reactjs.org copy\n            <p>Trabalhando atualmente</p>\n                </a>\n                </li>\n                <li><a target=\"_blank\" href=\"#\">angular.io copy\n            <p>Próximo projeto</p>\n                </a>\n                </li>\n            </ul>\n        </nav>\n    </div>\n        </div>\n    )\n}\n\nexport default ProjectsMenu;","/home/elton/Área de Trabalho/Project/site-react/src/pages/workProgress/workProgress.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"45","replacedBy":"49"},{"ruleId":"47","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":11,"column":18,"nodeType":"53","messageId":"54","endLine":11,"endColumn":20},{"ruleId":"55","severity":1,"message":"56","line":37,"column":24,"nodeType":"57","endLine":37,"endColumn":39},{"ruleId":"58","severity":1,"message":"59","line":38,"column":21,"nodeType":"60","endLine":38,"endColumn":33},{"ruleId":"58","severity":1,"message":"59","line":42,"column":21,"nodeType":"60","endLine":42,"endColumn":49},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],["61"],["62"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]